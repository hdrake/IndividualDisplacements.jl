var documenterSearchIndex = {"docs":
[{"location":"examples/#List-Of-Examples","page":"Examples","title":"List Of Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"A solid-body-rotation example is used for unit testing:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"test/runtests.jl\nexamples/SolidBodyRotation.jl","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: SolidBodyRotation)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Two examples using ⬡! and update_locations.jl:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"examples/RandomFlow_fleet.jl","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: RandomFlow)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"and examples/GlobalDomain_fleet.jl for the real ocean:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: simulated particle movie (5m))","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Plotting recipes using three popular plotting packages:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"examples/recipes_plots.jl\nexamples/recipes_makie.jl\nexamples/recipes_pyplot.jl\t","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Three other examples using ⬡  are documented in the API Guide:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"examples/examples123.jl\nexamples/example2fleet.jl\nexamples/example2more.jl","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"EditURL = \"https://github.com/JuliaClimate/IndividualDisplacements.jl/blob/master/examples/basics/detailed_look.jl\"","category":"page"},{"location":"basics/detailed_look/#A-Detailed-Look-...","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"","category":"section"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"... at spatial interpolation, temporal integration, and input/output","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"(Image: ) (Image: )","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"put together uvetc dictionnary\nread gridded velocity output (Udata, Vdata)\nread trajectory output (float_traj*data)\ninterpolate U,V along trajectory from gridded output\ncompare with u,v from float_traj*data\ncompute whole trajectory using OrdinaryDiffEq.jl\ncompare with x(t),y(t) from float_traj*data","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"Notes: For additional documentation see e.g. 1, 2, 3, 4","category":"page"},{"location":"basics/detailed_look/#.-import-software","page":"A Detailed Look ...","title":"1. import software","text":"","category":"section"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"using IndividualDisplacements, OrdinaryDiffEq\np=dirname(pathof(IndividualDisplacements))\ninclude(joinpath(p,\"../examples/recipes_plots.jl\"))\ninclude(joinpath(p,\"../examples/example123.jl\"))\ninclude(joinpath(p,\"../examples/helper_functions.jl\"))","category":"page"},{"location":"basics/detailed_look/#.-reload-trajectories-from-MITgcm/pkg/flt","page":"A Detailed Look ...","title":"2. reload trajectories from MITgcm/pkg/flt","text":"","category":"section"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"get_flt_ex_if_needed()\ndirIn=joinpath(p,\"../examples/flt_example/\")\nprec=Float32\ndf=read_flt(dirIn,prec) #function exported by IndividualDisplacements\nplt=PlotBasic(df,300,100000.0)","category":"page"},{"location":"basics/detailed_look/#.-Read-gridded-variables-via-MeshArrays.jl","page":"A Detailed Look ...","title":"3. Read gridded variables via MeshArrays.jl","text":"","category":"section"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"Put gridded variables in a dictionary.","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"uvetc=example2_setup()","category":"page"},{"location":"basics/detailed_look/#.-Visualize-velocity-fields","page":"A Detailed Look ...","title":"4. Visualize velocity fields","text":"","category":"section"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"plt=heatmap(uvetc[\"mskW\"][1,1].*uvetc[\"u0\"][1,1],title=\"U at the start\")\ndisplay(plt)\n\nplt=heatmap(uvetc[\"mskW\"][1,1].*uvetc[\"u1\"][1,1]-uvetc[\"u0\"][1,1],title=\"U end - U start\")\ndisplay(plt)","category":"page"},{"location":"basics/detailed_look/#.-Visualize-trajectories-from-MITgcm/pkg/flt","page":"A Detailed Look ...","title":"5. Visualize trajectories from MITgcm/pkg/flt","text":"","category":"section"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"Select one trajectory","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"tmp=df[df.ID .== 200, :]\ntmp[1:4,:]","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"Super-impose trajectory over velocity field (first for u ...)","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"x=uvetc[\"XG\"].f[1][:,1]\ny=uvetc[\"YC\"].f[1][1,:]\nz=transpose(uvetc[\"mskW\"][1].*uvetc[\"u0\"][1,1])\nplt=contourf(x,y,z,c=:delta)\nplot!(tmp[:,:lon],tmp[:,:lat],c=:red,w=4,leg=false)","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"Super-impose trajectory over velocity field (... then for v)","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"x=uvetc[\"XC\"].f[1][:,1]\ny=uvetc[\"YG\"].f[1][1,:]\nz=transpose(uvetc[\"mskW\"][1].*uvetc[\"v0\"][1,1])\nplt=contourf(x,y,z,c=:delta)\nplot!(tmp[:,:lon],tmp[:,:lat],c=:red,w=4,leg=false)","category":"page"},{"location":"basics/detailed_look/#.-Recompute-displacements-from-gridded-flow-fields","page":"A Detailed Look ...","title":"6. Recompute displacements from gridded flow fields","text":"","category":"section"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"uInit=[tmp[1,:lon];tmp[1,:lat]]./uvetc[\"dx\"]\nnSteps=Int32(tmp[end,:time]/3600)-2\ndu=fill(0.0,2);\nnothing #hide","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"Visualize and compare with actual grid point values – jumps on the tangential component are expected with linear scheme:","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"tmpu=fill(0.0,100)\ntmpv=fill(0.0,100)\ntmpx=fill(0.0,100)\nfor i=1:100\n    tmpx[i]=500.0 *i./uvetc[\"dx\"]\n    ⬡(du,[tmpx[i];0.499./uvetc[\"dx\"]],uvetc,0.0)\n    tmpu[i]=du[1]\n    tmpv[i]=du[2]\nend\nplt=plot(tmpx,tmpu,label=\"u (interp)\")\nplot!(uvetc[\"XG\"].f[1][1:10,1]./uvetc[\"dx\"],uvetc[\"u0\"].f[1][1:10,1],marker=:o,label=\"u (C-grid)\")\nplot!(tmpx,tmpv,label=\"v (interp)\")\nplot!(uvetc[\"XG\"].f[1][1:10,1]./uvetc[\"dx\"],uvetc[\"v0\"].f[1][1:10,1],marker=:o,label=\"v (C-grid)\")\ndisplay(plt)\n\ntmpu=fill(0.0,100)\ntmpv=fill(0.0,100)\ntmpy=fill(0.0,100)\nfor i=1:100\n    tmpy[i]=500.0 *i./uvetc[\"dx\"]\n    ⬡(du,[0.499./uvetc[\"dx\"];tmpy[i]],uvetc,0.0)\n    tmpu[i]=du[1]\n    tmpv[i]=du[2]\nend\nplt=plot(tmpx,tmpu,label=\"u (interp)\")\nplot!(uvetc[\"YG\"].f[1][1,1:10]./uvetc[\"dx\"],uvetc[\"u0\"].f[1][1,1:10],marker=:o,label=\"u (C-grid)\")\nplot!(tmpx,tmpv,label=\"v (interp)\")\nplot!(uvetc[\"YG\"].f[1][1,1:10]./uvetc[\"dx\"],uvetc[\"v0\"].f[1][1,1:10],marker=:o,label=\"v (C-grid)\")\ndisplay(plt)","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"Compare recomputed velocities with those from pkg/flt","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"nSteps=2998\ntmpu=fill(0.0,nSteps); tmpv=fill(0.0,nSteps);\ntmpx=fill(0.0,nSteps); tmpy=fill(0.0,nSteps);\nrefu=fill(0.0,nSteps); refv=fill(0.0,nSteps);\nfor i=1:nSteps\n    □(du,[tmp[i,:lon],tmp[i,:lat]],tmp,tmp[i,:time])\n    refu[i]=du[1]./uvetc[\"dx\"]\n    refv[i]=du[2]./uvetc[\"dx\"]\n    ⬡(du,[tmp[i,:lon],tmp[i,:lat]]./uvetc[\"dx\"],uvetc,tmp[i,:time])\n    tmpu[i]=du[1]\n    tmpv[i]=du[2]\nend","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"plt=plot(tmpu,label=\"u\")\nplot!(tmpv,label=\"v\")\nplot!(refu,label=\"u (ref)\")\nplot!(refv,label=\"v (ref)\")\ndisplay(plt)","category":"page"},{"location":"basics/detailed_look/#.-Recompute-trajectories-from-gridded-flow-fields","page":"A Detailed Look ...","title":"6. Recompute trajectories from gridded flow fields","text":"","category":"section"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"Solve through time using OrdinaryDiffEq.jl with","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"⬡ is the function computing du/dt\nuInit is the initial condition u @ tspan[1]\ntspan is the time interval\nuvetc are parameters for ⬡\nTsit5 is the time-stepping scheme\nreltol and abstol are tolerance parameters","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"tspan = (0.0,nSteps*3600.0)\n#prob = ODEProblem(□,uInit,tspan,tmp)\nprob = ODEProblem(⬡,uInit,tspan,uvetc)\nsol = solve(prob,Tsit5(),reltol=1e-8,abstol=1e-8)\nsol[1:4]","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"Compare recomputed trajectories with those from pkg/flt","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"ref=transpose([tmp[1:nSteps,:lon] tmp[1:nSteps,:lat]])\nmaxLon=80*5.e3\nmaxLat=42*5.e3\nshow(size(ref))\nfor i=1:nSteps-1\n    ref[1,i+1]-ref[1,i]>maxLon/2 ? ref[1,i+1:end]-=fill(maxLon,(nSteps-i)) : nothing\n    ref[1,i+1]-ref[1,i]<-maxLon/2 ? ref[1,i+1:end]+=fill(maxLon,(nSteps-i)) : nothing\n    ref[2,i+1]-ref[2,i]>maxLat/2 ? ref[2,i+1:end]-=fill(maxLat,(nSteps-i)) : nothing\n    ref[2,i+1]-ref[2,i]<-maxLat/2 ? ref[2,i+1:end]+=fill(maxLat,(nSteps-i)) : nothing\nend\nref=ref./uvetc[\"dx\"]\n\nplt=plot(sol[1,:],sol[2,:],linewidth=5,title=\"Using Recomputed Velocities\",\n     xaxis=\"lon\",yaxis=\"lat\",label=\"Julia Solution\") # legend=false\nplot!(ref[1,:],ref[2,:],lw=3,ls=:dash,label=\"MITgcm Solution\")\ndisplay(plt)","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"","category":"page"},{"location":"basics/detailed_look/","page":"A Detailed Look ...","title":"A Detailed Look ...","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#IndividualDisplacements.jl","page":"Home","title":"IndividualDisplacements.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"IndividualDisplacements.jl computes elementary point displacements over a gridded Earth domain (e.g. a climate model C-grid). A typical application is the simulation and analysis of materials moving through atmospheric flows (e.g. dust or chemicals) or oceanic flows (e.g. plastics or planktons).","category":"page"},{"location":"","page":"Home","title":"Home","text":"Inter-operability with common climate model grids and their representation in MeshArrays.jl is a central element. The package can also read and plot trajectory simulation output from e.g. the MITgcm. It was originally developed using ECCOv4 and CBIOMES ocean model simulations (Forget et al. 2015).","category":"page"},{"location":"","page":"Home","title":"Home","text":"Contents:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"index.md\",\"examples.md\",\"API.md\"]\nDepth = 3","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: simulated particle movie (5m))","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: simulated particle movie (300m))","category":"page"},{"location":"API/#API-Guide","page":"API Guide","title":"API Guide","text":"","category":"section"},{"location":"API/","page":"API Guide","title":"API Guide","text":"The ⬡ and ⬡! functions compute the tracked point / individual / agent velocities. ","category":"page"},{"location":"API/","page":"API Guide","title":"API Guide","text":"⬡!\n⬡","category":"page"},{"location":"API/#IndividualDisplacements.⬡!","page":"API Guide","title":"IndividualDisplacements.⬡!","text":"VelComp!(du,u,p::Dict,tim)\n\nInterpolate velocity from gridded fields (after exchange on u0,v0) and return position increment du (i.e. x,y,fIndex).\n\n\n\n\n\n","category":"function"},{"location":"API/#IndividualDisplacements.⬡","page":"API Guide","title":"IndividualDisplacements.⬡","text":"VelComp(du,u,p::Dict,tim)\n\nInterpolate velocity from gridded fields and return position increment du\n\n\n\n\n\n","category":"function"},{"location":"API/#Setup-And-Postprocessing","page":"API Guide","title":"Setup And Postprocessing","text":"","category":"section"},{"location":"API/","page":"API Guide","title":"API Guide","text":"Convenience functions to initialize a simulation and posprocess the output are provided. ","category":"page"},{"location":"API/","page":"API Guide","title":"API Guide","text":"initialize_lonlat\nrandn_lonlat\npostprocess_lonlat\npostprocess_xy","category":"page"},{"location":"API/#IndividualDisplacements.initialize_lonlat","page":"API Guide","title":"IndividualDisplacements.initialize_lonlat","text":"initialize_lonlat(Γ,lon,lat ; msk=missing)\n\nDefine initial condition (u0,du) in grid coordinates (Γ) from longitude & latitude vectors (lon,lat) optionally with a land mask (msk).\n\n\n\n\n\n","category":"function"},{"location":"API/#IndividualDisplacements.randn_lonlat","page":"API Guide","title":"IndividualDisplacements.randn_lonlat","text":"randn_lonlat(nn=1,seed=missing)\n\nRandomly distributed longitude, latitude positions on the sphere.\n\n\n\n\n\n","category":"function"},{"location":"API/#IndividualDisplacements.postprocess_lonlat","page":"API Guide","title":"IndividualDisplacements.postprocess_lonlat","text":"postprocess_lonlat()\n\nCopy sol to a DataFrame & map position to lon,lat coordinates\n\n\n\n\n\n","category":"function"},{"location":"API/#IndividualDisplacements.postprocess_xy","page":"API Guide","title":"IndividualDisplacements.postprocess_xy","text":"postprocess_xy()\n\nCopy sol to a DataFrame & map position to x,y coordinates, and define time axis for a simple doubly periodic domain\n\n\n\n\n\n","category":"function"},{"location":"API/#Read-Output-From-File","page":"API Guide","title":"Read Output From File","text":"","category":"section"},{"location":"API/","page":"API Guide","title":"API Guide","text":"Trajectory simulated by the MITgcm or observed by the global drifter program can be read from file.","category":"page"},{"location":"API/","page":"API Guide","title":"API Guide","text":"read_flt\nread_drifters","category":"page"},{"location":"API/#IndividualDisplacements.read_flt","page":"API Guide","title":"IndividualDisplacements.read_flt","text":"read_flt(dirIn::String,prec::DataType)\n\nRead displacements from MITgcm/pkg/flt output file into a DataFrame.\n\n\n\n\n\n","category":"function"},{"location":"API/#IndividualDisplacements.read_drifters","page":"API Guide","title":"IndividualDisplacements.read_drifters","text":"read_drifters(pth,lst;chnk=Inf,rng=(missing,missing))\n\nRead near-surface drifter data (https://doi.org/10.1002/2016JC011716) from the Global Drifter Program (https://doi.org/10.25921/7ntx-z961) into a DataFrame\n\nNote: need to use NetCDF.jl as NCDatasets.jl errors when TIME = Inf\n\npth=\"Drifter_hourly_v013/\"\nlst=[\"driftertrajGPS_1.03.nc\",\"driftertrajWMLE_1.02_block1.nc\",\"driftertrajWMLE_1.02_block2.nc\",\n   \"driftertrajWMLE_1.02_block3.nc\",\"driftertrajWMLE_1.02_block4.nc\",\"driftertrajWMLE_1.02_block5.nc\",\n   \"driftertrajWMLE_1.02_block6.nc\",\"driftertrajWMLE_1.03_block7.nc\"]\n\n#df=read_drifters( pth*lst[end],chnk=1000,rng=(2014.1,2014.2) )\n\ndf = DataFrame(lon=[], lat=[], t=[], ID=[])\nfor fil in lst\n   println(fil)\n   append!(df,read_drifters( pth*fil,chnk=10000,rng=(2005.0,2020.0) ))\n   println(size(df))\nend\n\n#sort!(df, [:t, :lat])\n#CSV.write(pth*\"Drifter_hourly_2005_2019.csv\", df)\n#unID=unique(df[!,:ID])\n\n\n\n\n\n","category":"function"},{"location":"API/#Types","page":"API Guide","title":"Types","text":"","category":"section"},{"location":"API/","page":"API Guide","title":"API Guide","text":"Modules = [IndividualDisplacements]\nOrder   = [:type]","category":"page"}]
}
