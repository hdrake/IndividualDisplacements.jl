var documenterSearchIndex = {"docs":
[{"location":"examples/#List-Of-Examples-1","page":"Examples","title":"List Of Examples","text":"","category":"section"},{"location":"examples/#","page":"Examples","title":"Examples","text":"A solid-body-rotation example is used for unit testing:","category":"page"},{"location":"examples/#","page":"Examples","title":"Examples","text":"test/runtests.jl\nexamples/SolidBodyRotation.jl","category":"page"},{"location":"examples/#","page":"Examples","title":"Examples","text":"(Image: SolidBodyRotation)","category":"page"},{"location":"examples/#","page":"Examples","title":"Examples","text":"Two examples using ⬡! and update_locations.jl:","category":"page"},{"location":"examples/#","page":"Examples","title":"Examples","text":"examples/RandomFlow_fleet.jl","category":"page"},{"location":"examples/#","page":"Examples","title":"Examples","text":"(Image: RandomFlow)","category":"page"},{"location":"examples/#","page":"Examples","title":"Examples","text":"and examples/GlobalDomain_fleet.jl for the real ocean:","category":"page"},{"location":"examples/#","page":"Examples","title":"Examples","text":"(Image: simulated particle movie (5m))","category":"page"},{"location":"examples/#","page":"Examples","title":"Examples","text":"Plotting recipes using three popular plotting packages:","category":"page"},{"location":"examples/#","page":"Examples","title":"Examples","text":"examples/recipes_plots.jl\nexamples/recipes_makie.jl\nexamples/recipes_pyplot.jl\t","category":"page"},{"location":"examples/#","page":"Examples","title":"Examples","text":"Three other examples using ⬡  are documented in the API Guide:","category":"page"},{"location":"examples/#","page":"Examples","title":"Examples","text":"examples/examples123.jl\nexamples/example2fleet.jl\nexamples/example2more.jl","category":"page"},{"location":"#IndividualDisplacements.jl-1","page":"Home","title":"IndividualDisplacements.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"IndividualDisplacements.jl computes elementary point displacements over a gridded Earth domain (e.g. a climate model C-grid). A typical application is the simulation and analysis of materials moving through atmospheric flows (e.g. dust or chemicals) or oceanic flows (e.g. plastics or planktons).","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Inter-operability with common climate model grids and their representation in MeshArrays.jl is a central element. The package can also read and plot trajectory simulation output from e.g. the MITgcm. It was originally developed using ECCOv4 and CBIOMES ocean model simulations (Forget et al. 2015).","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Contents:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\"index.md\",\"examples.md\",\"API.md\"]\nDepth = 3","category":"page"},{"location":"#","page":"Home","title":"Home","text":"(Image: simulated particle movie (5m))","category":"page"},{"location":"#","page":"Home","title":"Home","text":"(Image: simulated particle movie (300m))","category":"page"},{"location":"API/#API-Guide-1","page":"API Guide","title":"API Guide","text":"","category":"section"},{"location":"API/#","page":"API Guide","title":"API Guide","text":"The ⬡ and ⬡! functions compute the tracked point / individual / agent velocities. ","category":"page"},{"location":"API/#","page":"API Guide","title":"API Guide","text":"⬡!\n⬡","category":"page"},{"location":"API/#IndividualDisplacements.⬡!","page":"API Guide","title":"IndividualDisplacements.⬡!","text":"VelComp!(du,u,p::Dict,tim)\n\nInterpolate velocity from gridded fields (after exchange on u0,v0) and return position increment du (i.e. x,y,fIndex).\n\n\n\n\n\n","category":"function"},{"location":"API/#IndividualDisplacements.⬡","page":"API Guide","title":"IndividualDisplacements.⬡","text":"VelComp(du,u,p::Dict,tim)\n\nInterpolate velocity from gridded fields and return position increment du\n\n\n\n\n\n","category":"function"},{"location":"API/#Setup-And-Postprocessing-1","page":"API Guide","title":"Setup And Postprocessing","text":"","category":"section"},{"location":"API/#","page":"API Guide","title":"API Guide","text":"Convenience functions to initialize a simulation and posprocess the output are provided. ","category":"page"},{"location":"API/#","page":"API Guide","title":"API Guide","text":"setup_periodic_domain\ninitialize_randn\ninitialize_gridded\npostprocess_lonlat\npostprocess_xy","category":"page"},{"location":"API/#IndividualDisplacements.initialize_randn","page":"API Guide","title":"IndividualDisplacements.initialize_randn","text":"initialize_randn(Γ::Dict,n::Int=1 ; s=missing,msk=missing)\n\nDefine initial condition (u0,du) using randomly distributed longitude, latitude positions on the sphere (randn_lonlat).\n\n\n\n\n\n","category":"function"},{"location":"API/#IndividualDisplacements.initialize_gridded","page":"API Guide","title":"IndividualDisplacements.initialize_gridded","text":"initialize_gridded(uvetc::Dict,n_subset::Int=1)\n\nDefine initial condition (u0,du) as a subset of grid points\n\n\n\n\n\n","category":"function"},{"location":"API/#IndividualDisplacements.postprocess_lonlat","page":"API Guide","title":"IndividualDisplacements.postprocess_lonlat","text":"postprocess_lonlat()\n\nCopy sol to a DataFrame & map position to lon,lat coordinates\n\n\n\n\n\n","category":"function"},{"location":"API/#IndividualDisplacements.postprocess_xy","page":"API Guide","title":"IndividualDisplacements.postprocess_xy","text":"postprocess_xy()\n\nCopy sol to a DataFrame & map position to x,y coordinates, and define time axis for a simple doubly periodic domain\n\n\n\n\n\n","category":"function"},{"location":"API/#Read-Output-From-File-1","page":"API Guide","title":"Read Output From File","text":"","category":"section"},{"location":"API/#","page":"API Guide","title":"API Guide","text":"Trajectory simulated by the MITgcm or observed by the global drifter program can be read from file.","category":"page"},{"location":"API/#","page":"API Guide","title":"API Guide","text":"read_flt\nread_drifters","category":"page"},{"location":"API/#IndividualDisplacements.read_flt","page":"API Guide","title":"IndividualDisplacements.read_flt","text":"read_flt(dirIn::String,prec::DataType)\n\nRead displacements from MITgcm/pkg/flt output file into a DataFrame.\n\n\n\n\n\n","category":"function"},{"location":"API/#IndividualDisplacements.read_drifters","page":"API Guide","title":"IndividualDisplacements.read_drifters","text":"read_drifters(pth,lst;chnk=Inf,rng=(missing,missing))\n\nRead near-surface drifter data (https://doi.org/10.1002/2016JC011716) from the Global Drifter Program (https://doi.org/10.25921/7ntx-z961) into a DataFrame\n\nNote: need to use NetCDF.jl as NCDatasets.jl errors when TIME = Inf\n\npth=\"Drifter_hourly_v013/\"\nlst=[\"driftertrajGPS_1.03.nc\",\"driftertrajWMLE_1.02_block1.nc\",\"driftertrajWMLE_1.02_block2.nc\",\n   \"driftertrajWMLE_1.02_block3.nc\",\"driftertrajWMLE_1.02_block4.nc\",\"driftertrajWMLE_1.02_block5.nc\",\n   \"driftertrajWMLE_1.02_block6.nc\",\"driftertrajWMLE_1.03_block7.nc\"]\n\n#df=read_drifters( pth*lst[end],chnk=1000,rng=(2014.1,2014.2) )\n\ndf = DataFrame(lon=[], lat=[], t=[], ID=[])\nfor fil in lst\n   println(fil)\n   append!(df,read_drifters( pth*fil,chnk=10000,rng=(2005.0,2020.0) ))\n   println(size(df))\nend\n\n#sort!(df, [:t, :lat])\n#CSV.write(pth*\"Drifter_hourly_2005_2019.csv\", df)\n#unID=unique(df[!,:ID])\n\n\n\n\n\n","category":"function"},{"location":"API/#Types-1","page":"API Guide","title":"Types","text":"","category":"section"},{"location":"API/#","page":"API Guide","title":"API Guide","text":"Modules = [IndividualDisplacements]\nOrder   = [:type]","category":"page"}]
}
